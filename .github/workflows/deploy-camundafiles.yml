name: Deploy Camunda Files

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: arc-runner-set  # Name des eigenen Runners

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Deploy Camunda Files
      run: |
        #!/bin/bash

            # Server URL
            SERVER_URL="http://10.0.24.77:30000/engine-rest/deployment/create"

            # Dateien zum Hochladen
            FILES=(
                "https://raw.githubusercontent.com/Bazzako/SemArb4-CD-und-Camunda-BPM/main/processesGrundgeruest.bpmn"
                "https://raw.githubusercontent.com/Bazzako/SemArb4-CD-und-Camunda-BPM/main/processesAnmeldeformular.form"
                "https://raw.githubusercontent.com/Bazzako/SemArb4-CD-und-Camunda-BPM/main/processesDatenerfassung.form"
                "https://raw.githubusercontent.com/Bazzako/SemArb4-CD-und-Camunda-BPM/main/processesDatensicherung.form"
                "https://raw.githubusercontent.com/Bazzako/SemArb4-CD-und-Camunda-BPM/main/processesDefektanalyse.form"
                "https://raw.githubusercontent.com/Bazzako/SemArb4-CD-und-Camunda-BPM/main/processesAbholung.form"
            )

            # Tempor채res Verzeichnis erstellen
            TEMP_DIR=$(mktemp -d)

            # Iteriere 체ber die Dateien, lade sie herunter und f체hre den curl-Befehl aus
            for FILE in "${FILES[@]}"
            do
                BASENAME=$(basename "$FILE")
                TEMP_FILE="$TEMP_DIR/$BASENAME"
                
                echo "Downloading file: $FILE"
                curl -s -o "$TEMP_FILE" "$FILE"
                
                echo "Uploading file: $TEMP_FILE"
                curl --location "$SERVER_URL" \
                    --header 'Content-Type: multipart/form-data' \
                    --form "upload=@$TEMP_FILE"
                    
                sleep 1
            done

            # Tempor채res Verzeichnis bereinigen
            rm -r "$TEMP_DIR"

            echo "All files have been successfully uploaded."