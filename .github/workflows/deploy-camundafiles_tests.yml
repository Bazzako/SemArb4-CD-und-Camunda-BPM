name: Deploy and Test Camunda

on:
  push:
    branches:
      - main
    paths:
      - 'processes/**'

  workflow_dispatch:

jobs:
  deploy:
    runs-on: arc-runner-set

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Deploy Camunda Files
      run: |
        #!/bin/bash

        # Camunda Server URL
        SERVER_URL="http://10.0.24.77:30000/engine-rest/deployment/create"

        # URLs der .form- und .bpmn-Dateien im Git-Repository (Raw-URLs)
        FILES=(
            "https://raw.githubusercontent.com/Bazzako/SemArb4-CD-und-Camunda-BPM/main/processes/Grundgeruest.bpmn"
            "https://raw.githubusercontent.com/Bazzako/SemArb4-CD-und-Camunda-BPM/main/processes/Abholung.form"
            "https://raw.githubusercontent.com/Bazzako/SemArb4-CD-und-Camunda-BPM/main/processes/Anmeldeformular.form"
            "https://raw.githubusercontent.com/Bazzako/SemArb4-CD-und-Camunda-BPM/main/processes/Datenerfassung.form"
            "https://raw.githubusercontent.com/Bazzako/SemArb4-CD-und-Camunda-BPM/main/processes/Datensicherung.form"
            "https://raw.githubusercontent.com/Bazzako/SemArb4-CD-und-Camunda-BPM/main/processes/Defektanalyse.form"
        )

        # Iteriere über die Dateien und führe den curl-Befehl aus
        for URL in "${FILES[@]}"
        do
            echo "Lade Datei hoch: $URL"

            # Extrahiere den Dateinamen (mit der Erweiterung) aus der URL
            FILENAME=$(basename "$URL")

            # Herunterladen der Datei und Speichern unter dem gleichen Namen
            curl -s -o "$FILENAME" "$URL"

            # Datei an Camunda hochladen
            curl --location "$SERVER_URL" \
                --header 'Content-Type: multipart/form-data' \
                --form "upload=@$FILENAME"

            # Temporäre Datei löschen
            rm "$FILENAME"

            sleep 1
        done

        echo "Alle Dateien wurden erfolgreich hochgeladen."

  integration-tests:
    needs: deploy
    runs-on: arc-runner-set

    services:
      selenium:
        image: selenium/standalone-chrome:latest
        ports: 
          - 4444:4444
        options: --shm-size="2g"

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Get IP Address
      run: echo "##[set-output name=ip;]$(ifconfig eth0 | grep 'inet [0-9\.]* ' -o | sed 's/[^0-9\.]//g')"
      id: ip_addr 

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest

    - name: Run Tests
      run: pytest ./tests
